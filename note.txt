                           PROJET 6 API 
Api CRUD => Create Read Update Delete

Instaler node js

le Frontend est cloné avec GIT CLONE 
                Instalé avec npm install
                lancé avec npm run start

DEMARRER LE SERVEUR NODE 
    Initialiser le projet :
        CD BACKEND  => npm init => faire entrer jusqu'a entry point et merttre (server.js)

Repository GIT pour mettre en ligne et enregistrer sur github 
    git init => qui crée le depot git du projet
        dans le dossier backend creer un fichier .gitignore pour permettre au repogit 
        de savoir quel fichier il ne faut pas charger sur github
            dans le fichier .gitignore ecrire node_modules

Dans le dossier backend
    Ajouter un fichier server.js

DEMARRER UN SERVEUR BASIQUE
    dans le fichier server.js importer le package http de node 
    creer un serveur qui va ecouter attendre les requetes http et qui va y repondre
        const http = require ('http'); //importer le package
        const server = http.createServer(req, res )

Installer nodemon
    dans le terminal du dossier backend 
    faire:
        npm install -g nodemon
    pour l'utiliser taper dans le ternimal 
        nodemon pour que le server redemmarre a chaque modification du fichier


APPLICATION EXPRESS
    INSTALER EXPRESS    
        Dans le terminal du dossier backend taper 
            npm install express --save
        dans le dossier backend creer un fichier app.js
        dans ce fichier importer en creant une constante 
            const express = require('express');


CREER UNE ROUTE GET 
    LE Frontend doit s'executer dans le navigateur
        dans le dossier frontend taper dans e terminal 
            npm run start pour acceder à http://localhost:4200/

definition:
    bcrypt => package de cryptage 
    mongoose-unique-validator ameliore les messages d'erreur lors de l'enregistrement de données uniques

INSTALATION DU PACKAGE DE VALIDATION 
    Aller sur le dossier backend 
        taper dans le terminal npm install -save mongoose-unique-validator 

Creer des utilisateurs 
    Aller sur le dossier backend
        dans le terminal taper npm install --save bcrypt
        importer dans le fichier users/controllers

CREER  DES TOKENS ALEATOIRES
    Allez sur le dossier backend 
    dans le terminal tape npm install --save* jsonwebtoken
        importer dans le fichier users/controllers
* n'est pas utile de le mettre si une version recente de node est instalé.

IMPLEMENTATION DES TELECHARGEMENT DE FICHIERS
    Aller sur le backend
    dans le terminal taper npm install multer
